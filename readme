# Assignment 1 â€“ Securing and Monitoring an Authenticated Flask App

## Overview

This project is part of Assignment 1 for INFO8046. It demonstrates how to build a secure and production-ready Flask application using Auth0 for authentication and Azure for deployment, monitoring, and alerting.

---

## âœ… Features

- Auth0 Single Sign-On (SSO) Integration  
- Flask app logging user activity (login, protected access, unauthorized attempts)  
- Azure App Service deployment  
- Azure Monitor and KQL-based traffic monitoring  
- Email alerts on suspicious access patterns  

---

## .env File
'''
AUTH0_CLIENT_ID=XzrdQy1LBN8UUcINNUWAo7LbwVhFWUND
AUTH0_CLIENT_SECRET=APFyKSPb0UpNyd8_uckOgvAZocBOYVa7x1lSKg_PTzKCycC9iqvHRedBLWidabXb
AUTH0_DOMAIN=dev-sqflw86oo7q08ol5.us.auth0.com
AUTH0_CALLBACK_URL=http://localhost:3000/callback
APP_SECRET_KEY=45d4a814b625b0bcc4ecb0e509949657cbfe1ddb309a191920e854c189106e73
FLASK_ENV=development
'''
## Install Dependencies
'''
pip install -r requirements.txt
'''

## Run Locally 
'''
python server.py
http://localhost:3000 
'''
## Monitoring with KQL
'''
AppServiceConsoleLogs
| where TimeGenerated > ago(15m)
| where ResultDescription has "/protected"
| parse ResultDescription with * "user_id=" user_id: string ","
| summarize AccessCount = count() by user_id, bin(TimeGenerated, 15m)
| where AccessCount > 10
| project user_id, TimeGenerated, AccessCount
'''

## ðŸ—‚ Repository Structure
ðŸ“¦ flask-auth0-app/
â”œâ”€â”€ server.py
â”œâ”€â”€ .env.example
â”œâ”€â”€ requirements.txt
â”œâ”€â”€ templates/
â”‚   â””â”€â”€ home.html
â”œâ”€â”€ test-app.http
â””â”€â”€ README.md

## ðŸ“º YouTube Demo
https://drive.google.com/file/d/1yGuuL_JjMqhwqaRK11f-RTHbzYMxU9yN/view?usp=sharing
